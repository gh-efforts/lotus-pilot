#!/bin/bash
ulimit -n 655350

# 随机获取可用端口
while
  port=$(shuf -n 1 -i 49152-65535)
  netstat -atun | grep -q "$port"
do
  continue
done
listen=0.0.0.0:$port

base_dir=/media/nvme/{{.MinerID}}
mkdir -p $base_dir

repo_dir=$base_dir/.lotusworker
log_dir=$base_dir/log
tmp_dir=$base_dir/tmp

mkdir -p $repo_dir $log_dir $tmp_dir

# miner 的api信息，参考miner部署环节
export MINER_API_INFO={{.MinerAPIInfo}}


## 选择可以用的显卡
if [[ -f /etc/gpu.conf ]];then
        gpu_x=$(cat /etc/gpu.conf)
        if [[ $(echo $gpu_x|grep unset) ]];then
                        unset CUDA_VISIBLE_DEVICES
			gpu_number=$(nvidia-smi -L|wc -l)
        else
                gpu=$(echo $gpu_x|awk -F '=' '{print $2}')
                export CUDA_VISIBLE_DEVICES=$gpu
                gpu_number=1
        fi
else
        echo "no find /etc/gpu.conf" 
        exit
fi


export TRUST_PARAMS=1
export TMPDIR=$tmp_dir

# 封存参数配置， 一般不需要改动
export FIL_PROOFS_USE_GPU_COLUMN_BUILDER=1
export FIL_PROOFS_USE_GPU_TREE_BUILDER=1
export FIL_PROOFS_USE_MULTICORE_SDR=1
export FIL_PROOFS_MULTICORE_SDR_PRODUCERS=1
export FIL_PROOFS_MAXIMIZE_CACHING=1
export FIL_PROOFS_LAYER_CACHE_SIZE=32
mkdir -p /media/nvme/parent_cache
export FIL_PROOFS_PARENT_CACHE=/media/nvme/parent_cache
# 使用独立的程序做P1,P2任务， gh的代码需要开启，不开启可能封存有异常
export P1_SEPARATE_PROCESS=1
export P2_SEPARATE_PROCESS=1

# 设置 PC1 的并行数量， 必须设置，根据配置情况提前计算好
export PC1_32G_MAX_CONCURRENT=24

# 设置 PC1 的CPU使用数量，必须设置，默认设置为是1, 一般不需要修改
export PC1_32G_MAX_PARALLELISM=1

# 设置 PC2 的并行数量， 必须设置，根据配置情况提前计算好
if [[ $gpu_number == 1 ]];then
        export PC2_32G_MAX_CONCURRENT=1
elif [[ $gpu_number > 1 ]];then
        export PC2_32G_MAX_CONCURRENT=2
        export CUDA_VISIBLE_DEVICES=0,1
fi

# 设置 PC2 的CPU使用数量，必须设置，默认设置为是2, 一般不需要修改
export PC2_32G_MAX_PARALLELISM_GPU=2

# 设置 PC2 的GPU使用数量，必须设置，默认设置为是1, 一般不需要修改
export PC2_32G_GPU_UTILIZATION=1

# 设置 AP 任务并行数， 设置为1， 一般不需要修改。
export AP_32G_MAX_CONCURRENT=1
export FAST_ADD_PIECE=1

# 设置 GET 任务并行数， 设置为1， 一般不需修改。
export GET_32G_MAX_CONCURRENT=1

# 如果Miner使用了七牛，那么Worker也必须使用，否则数据存储会有问题，生产中都使用七牛。
export MUST_USE_QINIU=1
export QINIU_READER_CONFIG_PATH=/media/nvme/ap-read.json
# Rust 日志等级
export RUST_LOG=info

# 使用独立进程做P1, P2, 也会生成独立的日志文件，建议配置到一个单独的目录， 需要提前创建好
# 如果不配置，P1, P2的日志会和Worker日志混在一起，不便排查问题。
export P1_SEPARATE_LOG_PATH=$log_dir
export P2_SEPARATE_LOG_PATH=$log_dir

nohup lotus-worker --worker-repo=$repo_dir run --listen=$listen --commit=false >> $base_dir/worker.log 2>&1 &
